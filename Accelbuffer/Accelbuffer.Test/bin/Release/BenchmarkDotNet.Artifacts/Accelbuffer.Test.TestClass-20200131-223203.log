// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
BuildScript: C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer.Test\bin\Release\fb026c48-64fb-4a14-a3be-287311ba4627.bat
// ***** Done, took 00:00:03 (3.48 sec)   *****
// Found 2 benchmarks:
//   TestClass.ProtobufDeserializeAndDeserialize: DefaultJob
//   TestClass.AccelbufferSerializeAndDeserialize: DefaultJob

// **************************
// Benchmark: TestClass.ProtobufDeserializeAndDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer.Test\bin\Release\fb026c48-64fb-4a14-a3be-287311ba4627.exe --benchmarkName "Accelbuffer.Test.TestClass.ProtobufDeserializeAndDeserialize" --job "Default" --benchmarkId 0 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.7.2 (4.7.3324.0), X86 LegacyJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 348371.36 ns, 348.3714 us/op
WorkloadJitting  1: 1 op, 100722694.28 ns, 100.7227 ms/op

WorkloadPilot    1: 2 op, 66994.49 ns, 33.4972 us/op
WorkloadPilot    2: 3 op, 32792.04 ns, 10.9307 us/op
WorkloadPilot    3: 4 op, 33497.25 ns, 8.3743 us/op
WorkloadPilot    4: 5 op, 50069.57 ns, 10.0139 us/op
WorkloadPilot    5: 6 op, 41254.50 ns, 6.8758 us/op
WorkloadPilot    6: 7 op, 39491.49 ns, 5.6416 us/op
WorkloadPilot    7: 8 op, 40901.90 ns, 5.1127 us/op
WorkloadPilot    8: 9 op, 45838.34 ns, 5.0931 us/op
WorkloadPilot    9: 10 op, 39138.89 ns, 3.9139 us/op
WorkloadPilot   10: 11 op, 51832.58 ns, 4.7121 us/op
WorkloadPilot   11: 12 op, 54653.40 ns, 4.5545 us/op
WorkloadPilot   12: 13 op, 59237.24 ns, 4.5567 us/op
WorkloadPilot   13: 14 op, 60295.04 ns, 4.3068 us/op
WorkloadPilot   14: 15 op, 81451.20 ns, 5.4301 us/op
WorkloadPilot   15: 16 op, 69462.71 ns, 4.3414 us/op
WorkloadPilot   16: 32 op, 99433.93 ns, 3.1073 us/op
WorkloadPilot   17: 64 op, 214382.38 ns, 3.3497 us/op
WorkloadPilot   18: 128 op, 292307.55 ns, 2.2837 us/op
WorkloadPilot   19: 256 op, 850830.06 ns, 3.3236 us/op
WorkloadPilot   20: 512 op, 1692845.06 ns, 3.3063 us/op
WorkloadPilot   21: 1024 op, 3194226.91 ns, 3.1194 us/op
WorkloadPilot   22: 2048 op, 6710027.38 ns, 3.2764 us/op
WorkloadPilot   23: 4096 op, 13633379.34 ns, 3.3285 us/op
WorkloadPilot   24: 8192 op, 17488736.11 ns, 2.1349 us/op
WorkloadPilot   25: 16384 op, 35454543.53 ns, 2.1640 us/op
WorkloadPilot   26: 32768 op, 72142138.34 ns, 2.2016 us/op
WorkloadPilot   27: 65536 op, 143383024.44 ns, 2.1879 us/op
WorkloadPilot   28: 131072 op, 294358993.16 ns, 2.2458 us/op
WorkloadPilot   29: 262144 op, 617146570.55 ns, 2.3542 us/op

WorkloadWarmup   1: 262144 op, 747448743.92 ns, 2.8513 us/op
WorkloadWarmup   2: 262144 op, 580503051.07 ns, 2.2144 us/op
WorkloadWarmup   3: 262144 op, 584324910.60 ns, 2.2290 us/op
WorkloadWarmup   4: 262144 op, 588471869.72 ns, 2.2448 us/op
WorkloadWarmup   5: 262144 op, 582738904.13 ns, 2.2230 us/op
WorkloadWarmup   6: 262144 op, 611584617.22 ns, 2.3330 us/op
WorkloadWarmup   7: 262144 op, 585156700.12 ns, 2.2322 us/op

// BeforeActualRun
WorkloadActual   1: 262144 op, 617385282.51 ns, 2.3551 us/op
WorkloadActual   2: 262144 op, 579134600.40 ns, 2.2092 us/op
WorkloadActual   3: 262144 op, 583332334.29 ns, 2.2252 us/op
WorkloadActual   4: 262144 op, 581181458.46 ns, 2.2170 us/op
WorkloadActual   5: 262144 op, 580772439.45 ns, 2.2155 us/op
WorkloadActual   6: 262144 op, 585092526.45 ns, 2.2320 us/op
WorkloadActual   7: 262144 op, 590054702.77 ns, 2.2509 us/op
WorkloadActual   8: 262144 op, 585302324.99 ns, 2.2328 us/op
WorkloadActual   9: 262144 op, 580820746.01 ns, 2.2157 us/op
WorkloadActual  10: 262144 op, 592898442.70 ns, 2.2617 us/op
WorkloadActual  11: 262144 op, 578742858.92 ns, 2.2077 us/op
WorkloadActual  12: 262144 op, 580927231.99 ns, 2.2161 us/op
WorkloadActual  13: 262144 op, 583559762.97 ns, 2.2261 us/op
WorkloadActual  14: 262144 op, 590097367.68 ns, 2.2510 us/op
WorkloadActual  15: 262144 op, 594865259.97 ns, 2.2692 us/op

// AfterActualRun
WorkloadResult   1: 262144 op, 579134600.40 ns, 2.2092 us/op
WorkloadResult   2: 262144 op, 583332334.29 ns, 2.2252 us/op
WorkloadResult   3: 262144 op, 581181458.46 ns, 2.2170 us/op
WorkloadResult   4: 262144 op, 580772439.45 ns, 2.2155 us/op
WorkloadResult   5: 262144 op, 585092526.45 ns, 2.2320 us/op
WorkloadResult   6: 262144 op, 590054702.77 ns, 2.2509 us/op
WorkloadResult   7: 262144 op, 585302324.99 ns, 2.2328 us/op
WorkloadResult   8: 262144 op, 580820746.01 ns, 2.2157 us/op
WorkloadResult   9: 262144 op, 592898442.70 ns, 2.2617 us/op
WorkloadResult  10: 262144 op, 578742858.92 ns, 2.2077 us/op
WorkloadResult  11: 262144 op, 580927231.99 ns, 2.2161 us/op
WorkloadResult  12: 262144 op, 583559762.97 ns, 2.2261 us/op
WorkloadResult  13: 262144 op, 590097367.68 ns, 2.2510 us/op
WorkloadResult  14: 262144 op, 594865259.97 ns, 2.2692 us/op
GC:  59 0 0 93333820 262144
Threading:  0 0 262144

// AfterAll
// Benchmark Process 8724 has exited with code 0

Mean = 2.2307 us, StdErr = 0.0053 us (0.24%); N = 14, StdDev = 0.0199 us
Min = 2.2077 us, Q1 = 2.2157 us, Median = 2.2257 us, Q3 = 2.2509 us, Max = 2.2692 us
IQR = 0.0352 us, LowerFence = 2.1628 us, UpperFence = 2.3037 us
ConfidenceInterval = [2.2082 us; 2.2532 us] (CI 99.9%), Margin = 0.0225 us (1.01% of Mean)
Skewness = 0.62, Kurtosis = 1.87, MValue = 2

// **************************
// Benchmark: TestClass.AccelbufferSerializeAndDeserialize: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer.Test\bin\Release\fb026c48-64fb-4a14-a3be-287311ba4627.exe --benchmarkName "Accelbuffer.Test.TestClass.AccelbufferSerializeAndDeserialize" --job "Default" --benchmarkId 1 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.7.2 (4.7.3324.0), X86 LegacyJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 251405.65 ns, 251.4057 us/op

System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 Accelbuffer.AccelWriter.WriteUTF8String(Int32 index, String value) 位置 C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer\IO\AccelWriter.cs:行号 950
   在 Accelbuffer.AccelWriter.WriteValue(Int32 index, String value) 位置 C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer\IO\AccelWriter.cs:行号 382
   在 Accelbuffer.Test.TestSerializer.Accelbuffer.ITypeSerializer<Accelbuffer.Test.Test>.Serialize(Test obj, AccelWriter& writer) 位置 C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer.Test\Test.accel.cs:行号 77
   在 Accelbuffer.Serializer.Serialize[T](T obj, Encoding encoding, Endian endian) 位置 C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer\Serializer.cs:行号 42
   在 Accelbuffer.Test.TestClass.AccelbufferSerializeAndDeserialize() 位置 C:\Users\Administrator\Desktop\GitHub\Accelbuffer\Accelbuffer\Accelbuffer.Test\Program.cs:行号 136
   在 BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount)
   在 BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   在 BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   在 BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   在 BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName)
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   在 System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args)
// AfterAll
ExitCode != 0
// Benchmark Process 8432 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Accelbuffer.Test.TestClass-report.csv
  BenchmarkDotNet.Artifacts\results\Accelbuffer.Test.TestClass-report-github.md
  BenchmarkDotNet.Artifacts\results\Accelbuffer.Test.TestClass-report.html

// * Detailed results *
TestClass.ProtobufDeserializeAndDeserialize: DefaultJob
Runtime = .NET Framework 4.7.2 (4.7.3324.0), X86 LegacyJIT; GC = Concurrent Workstation
Mean = 2.2307 us, StdErr = 0.0053 us (0.24%); N = 14, StdDev = 0.0199 us
Min = 2.2077 us, Q1 = 2.2157 us, Median = 2.2257 us, Q3 = 2.2509 us, Max = 2.2692 us
IQR = 0.0352 us, LowerFence = 2.1628 us, UpperFence = 2.3037 us
ConfidenceInterval = [2.2082 us; 2.2532 us] (CI 99.9%), Margin = 0.0225 us (1.01% of Mean)
Skewness = 0.62, Kurtosis = 1.87, MValue = 2
-------------------- Histogram --------------------
[2.200 us ; 2.276 us) | @@@@@@@@@@@@@@
---------------------------------------------------

TestClass.AccelbufferSerializeAndDeserialize: DefaultJob
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.12.0, OS=Windows 7 SP1 (6.1.7601.0)
Intel Pentium CPU G4560T 2.90GHz, 1 CPU, 4 logical and 2 physical cores
Frequency=2836054 Hz, Resolution=352.6026 ns, Timer=TSC
  [Host]     : .NET Framework 4.7.2 (4.7.3324.0), X86 LegacyJIT  [AttachedDebugger]
  DefaultJob : .NET Framework 4.7.2 (4.7.3324.0), X86 LegacyJIT


|                             Method |     Mean |     Error |    StdDev |    StdErr |      Min |       Q1 |   Median |       Q3 |      Max |      Op/s |  Gen 0 | Gen 1 | Gen 2 | Allocated |
|----------------------------------- |---------:|----------:|----------:|----------:|---------:|---------:|---------:|---------:|---------:|----------:|-------:|------:|------:|----------:|
|  ProtobufDeserializeAndDeserialize | 2.231 us | 0.0225 us | 0.0199 us | 0.0053 us | 2.208 us | 2.216 us | 2.226 us | 2.251 us | 2.269 us | 448,285.5 | 0.2251 |     - |     - |     356 B |
| AccelbufferSerializeAndDeserialize |       NA |        NA |        NA |        NA |       NA |       NA |       NA |       NA |       NA |        NA |      - |     - |     - |         - |

Benchmarks with issues:
  TestClass.AccelbufferSerializeAndDeserialize: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  TestClass.ProtobufDeserializeAndDeserialize: Default -> 1 outlier  was  removed (2.36 us)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  StdErr    : Standard error of all measurements
  Min       : Minimum
  Q1        : Quartile 1 (25th percentile)
  Median    : Value separating the higher half of all measurements (50th percentile)
  Q3        : Quartile 3 (75th percentile)
  Max       : Maximum
  Op/s      : Operation per second
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 us      : 1 Microsecond (0.000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:17 (17.44 sec), executed benchmarks: 2

Global total time: 00:00:20 (20.93 sec), executed benchmarks: 2
// * Artifacts cleanup *
