'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Accelbuffer
Imports Accelbuffer.Injection
Imports Accelbuffer.Memory
Imports Accelbuffer.Text
Imports float128 = System.Decimal
Imports float32 = System.Single
Imports float64 = System.Double
Imports int8 = System.SByte
Imports System
Imports System.Collections.Generic
Imports uint8 = System.Byte

'扩展类型请使用partial关键字在其他文件扩展，否则更改可能会丢失。
Namespace Accelbuffer.Test
    
    <MemorySize(256),
     SerializeBy(GetType(FieldTypeTest.FieldTypeTestSerializer))>
    Partial Friend Structure FieldTypeTest

        <NeverNull(),
         FieldIndex(1)>
        Private m_Field0 As int8

        <NeverNull(),
         FieldIndex(2)>
        Private m_Field1 As uint8

        <NeverNull(),
         FieldIndex(3)>
        Private m_Field2 As Int16

        <NeverNull(),
         FieldIndex(4)>
        Private m_Field3 As UInt16

        <NeverNull(),
         FieldIndex(5)>
        Private m_Field4 As Int32

        <NeverNull(),
         FieldIndex(6)>
        Private m_Field5 As UInt32

        <NeverNull(),
         FieldIndex(7)>
        Private m_Field6 As Int64

        <NeverNull(),
         FieldIndex(8)>
        Private m_Field7 As UInt64

        <NeverNull(),
         FieldIndex(9)>
        Private m_Field8 As [Boolean]

        <NeverNull(),
         FieldIndex(10)>
        Private m_Field9 As float32

        <NeverNull(),
         FieldIndex(11)>
        Private m_Field10 As float64

        <NeverNull(),
         FieldIndex(12)>
        Private m_Field11 As float128

        <NeverNull(),
         FieldIndex(13)>
        Private m_Field12 As IntPtr

        <NeverNull(),
         FieldIndex(14)>
        Private m_Field13 As UIntPtr

        <NeverNull(),
         FieldIndex(15)>
        Private m_Field14 As VInt

        <NeverNull(),
         FieldIndex(16)>
        Private m_Field15 As VUInt

        <NeverNull(),
         FieldIndex(17)>
        Private m_Field16 As Char

        <FieldIndex(18)>
        Private m_Field17 As String

        <FieldIndex(19)>
        Private m_Field18 As VInt()

        <FieldIndex(20)>
        Private m_Field19 As Dictionary(Of String, float32)

        <FieldIndex(21)>
        Private m_Field20 As List(Of Boolean)

        <NeverNull(),
         FieldIndex(22)>
        Private m_Field21 As KeyValuePair(Of Boolean, Boolean)

        <FieldIndex(23)>
        Private m_Field22 As VInt?

        <FieldIndex(24)>
        Private m_Field23 As Type

        <NeverNull(),
         FieldIndex(25)>
        Private m_Field24 As Guid

        <NeverNull(),
         FieldIndex(26)>
        Private m_Field25 As TimeSpan

        <NeverNull(),
         FieldIndex(27)>
        Private m_Field26 As DateTime

        <NeverNull(),
         FieldIndex(28)>
        Private m_Field27 As DateTimeOffset

        <NeverNull(),
         FieldIndex(29)>
        Private m_Field28 As TestEnum

        Partial Private Sub OnBeforeSerialization()
        End Sub
        Partial Private Sub OnAfterDeserialization()
        End Sub

        Public Property Field0() As int8
            Get
                Return Me.m_Field0
            End Get
            Set
                Me.m_Field0 = Value
            End Set
        End Property

        Public Property Field1() As uint8
            Get
                Return Me.m_Field1
            End Get
            Set
                Me.m_Field1 = Value
            End Set
        End Property

        Public Property Field2() As Int16
            Get
                Return Me.m_Field2
            End Get
            Set
                Me.m_Field2 = Value
            End Set
        End Property

        Public Property Field3() As UInt16
            Get
                Return Me.m_Field3
            End Get
            Set
                Me.m_Field3 = Value
            End Set
        End Property

        Public Property Field4() As Int32
            Get
                Return Me.m_Field4
            End Get
            Set
                Me.m_Field4 = Value
            End Set
        End Property

        Public Property Field5() As UInt32
            Get
                Return Me.m_Field5
            End Get
            Set
                Me.m_Field5 = Value
            End Set
        End Property

        Public Property Field6() As Int64
            Get
                Return Me.m_Field6
            End Get
            Set
                Me.m_Field6 = Value
            End Set
        End Property

        Public Property Field7() As UInt64
            Get
                Return Me.m_Field7
            End Get
            Set
                Me.m_Field7 = Value
            End Set
        End Property

        Public Property Field8() As [Boolean]
            Get
                Return Me.m_Field8
            End Get
            Set
                Me.m_Field8 = Value
            End Set
        End Property

        Public Property Field9() As float32
            Get
                Return Me.m_Field9
            End Get
            Set
                Me.m_Field9 = Value
            End Set
        End Property

        Public Property Field10() As float64
            Get
                Return Me.m_Field10
            End Get
            Set
                Me.m_Field10 = Value
            End Set
        End Property

        Public Property Field11() As float128
            Get
                Return Me.m_Field11
            End Get
            Set
                Me.m_Field11 = Value
            End Set
        End Property

        Public Property Field12() As IntPtr
            Get
                Return Me.m_Field12
            End Get
            Set
                Me.m_Field12 = Value
            End Set
        End Property

        Public Property Field13() As UIntPtr
            Get
                Return Me.m_Field13
            End Get
            Set
                Me.m_Field13 = Value
            End Set
        End Property

        Public Property Field14() As VInt
            Get
                Return Me.m_Field14
            End Get
            Set
                Me.m_Field14 = Value
            End Set
        End Property

        Public Property Field15() As VUInt
            Get
                Return Me.m_Field15
            End Get
            Set
                Me.m_Field15 = Value
            End Set
        End Property

        Public Property Field16() As Char
            Get
                Return Me.m_Field16
            End Get
            Set
                Me.m_Field16 = Value
            End Set
        End Property

        Public Property Field17() As String
            Get
                Return Me.m_Field17
            End Get
            Set
                Me.m_Field17 = Value
            End Set
        End Property

        Public Property Field18() As VInt()
            Get
                Return Me.m_Field18
            End Get
            Set
                Me.m_Field18 = Value
            End Set
        End Property

        Public Property Field19() As Dictionary(Of String, float32)
            Get
                Return Me.m_Field19
            End Get
            Set
                Me.m_Field19 = Value
            End Set
        End Property

        Public Property Field20() As List(Of Boolean)
            Get
                Return Me.m_Field20
            End Get
            Set
                Me.m_Field20 = Value
            End Set
        End Property

        Public Property Field21() As KeyValuePair(Of Boolean, Boolean)
            Get
                Return Me.m_Field21
            End Get
            Set
                Me.m_Field21 = Value
            End Set
        End Property

        Public Property Field22() As VInt?
            Get
                Return Me.m_Field22
            End Get
            Set
                Me.m_Field22 = Value
            End Set
        End Property

        Public Property Field23() As Type
            Get
                Return Me.m_Field23
            End Get
            Set
                Me.m_Field23 = Value
            End Set
        End Property

        Public Property Field24() As Guid
            Get
                Return Me.m_Field24
            End Get
            Set
                Me.m_Field24 = Value
            End Set
        End Property

        Public Property Field25() As TimeSpan
            Get
                Return Me.m_Field25
            End Get
            Set
                Me.m_Field25 = Value
            End Set
        End Property

        Public Property Field26() As DateTime
            Get
                Return Me.m_Field26
            End Get
            Set
                Me.m_Field26 = Value
            End Set
        End Property

        Public Property Field27() As DateTimeOffset
            Get
                Return Me.m_Field27
            End Get
            Set
                Me.m_Field27 = Value
            End Set
        End Property

        Public Property Field28() As TestEnum
            Get
                Return Me.m_Field28
            End Get
            Set
                Me.m_Field28 = Value
            End Set
        End Property

        Public NotInheritable Class FieldTypeTestSerializer
            Inherits Object
            Implements ITypeSerializer(Of FieldTypeTest)

            Public Sub Serialize(ByVal obj As FieldTypeTest, ByRef writer As AccelWriter) Implements ITypeSerializer(Of FieldTypeTest).Serialize
                obj.OnBeforeSerialization()
                writer.WriteValue(1, obj.m_Field0)
                writer.WriteValue(2, obj.m_Field1)
                writer.WriteValue(3, obj.m_Field2)
                writer.WriteValue(4, obj.m_Field3)
                writer.WriteValue(5, obj.m_Field4)
                writer.WriteValue(6, obj.m_Field5)
                writer.WriteValue(7, obj.m_Field6)
                writer.WriteValue(8, obj.m_Field7)
                writer.WriteValue(9, obj.m_Field8)
                writer.WriteValue(10, obj.m_Field9)
                writer.WriteValue(11, obj.m_Field10)
                writer.WriteValue(12, obj.m_Field11)
                writer.WriteValue(13, obj.m_Field12)
                writer.WriteValue(14, obj.m_Field13)
                writer.WriteValue(15, obj.m_Field14)
                writer.WriteValue(16, obj.m_Field15)
                writer.WriteValue(17, obj.m_Field16)
                If (Not (obj.m_Field17) Is Nothing) Then
                    writer.WriteValue(18, obj.m_Field17)
                End If
                If (Not (obj.m_Field18) Is Nothing) Then
                    writer.WriteValue(19, obj.m_Field18)
                End If
                If (Not (obj.m_Field19) Is Nothing) Then
                    writer.WriteValue(20, obj.m_Field19)
                End If
                If (Not (obj.m_Field20) Is Nothing) Then
                    writer.WriteValue(21, obj.m_Field20)
                End If
                writer.WriteValue(22, obj.m_Field21)
                If (Not (obj.m_Field22) Is Nothing) Then
                    writer.WriteValue(23, obj.m_Field22)
                End If
                If (Not (obj.m_Field23) Is Nothing) Then
                    writer.WriteValue(24, obj.m_Field23)
                End If
                writer.WriteValue(25, obj.m_Field24)
                writer.WriteValue(26, obj.m_Field25)
                writer.WriteValue(27, obj.m_Field26)
                writer.WriteValue(28, obj.m_Field27)
                writer.WriteValue(29, CType(obj.m_Field28, Int32))
            End Sub

            Public Function Deserialize(ByRef reader As AccelReader) As FieldTypeTest Implements ITypeSerializer(Of FieldTypeTest).Deserialize
                Dim result As FieldTypeTest = New FieldTypeTest()
                Dim index As Integer
                Do While reader.HasNext(index)
                    Select Case index
                        Case 1
                            result.m_Field0 = reader.ReadInt8()
                        Case 2
                            result.m_Field1 = reader.ReadUInt8()
                        Case 3
                            result.m_Field2 = reader.ReadInt16()
                        Case 4
                            result.m_Field3 = reader.ReadUInt16()
                        Case 5
                            result.m_Field4 = reader.ReadInt32()
                        Case 6
                            result.m_Field5 = reader.ReadUInt32()
                        Case 7
                            result.m_Field6 = reader.ReadInt64()
                        Case 8
                            result.m_Field7 = reader.ReadUInt64()
                        Case 9
                            result.m_Field8 = reader.ReadBoolean()
                        Case 10
                            result.m_Field9 = reader.ReadFloat32()
                        Case 11
                            result.m_Field10 = reader.ReadFloat64()
                        Case 12
                            result.m_Field11 = reader.ReadFloat128()
                        Case 13
                            result.m_Field12 = reader.ReadIntPtr()
                        Case 14
                            result.m_Field13 = reader.ReadUIntPtr()
                        Case 15
                            result.m_Field14 = reader.ReadVariantInt()
                        Case 16
                            result.m_Field15 = reader.ReadVariantUInt()
                        Case 17
                            result.m_Field16 = reader.ReadChar()
                        Case 18
                            result.m_Field17 = reader.ReadString()
                        Case 19
                            result.m_Field18 = reader.ReadGeneric(Of VInt())()
                        Case 20
                            result.m_Field19 = reader.ReadGeneric(Of Dictionary(Of String, float32))()
                        Case 21
                            result.m_Field20 = reader.ReadGeneric(Of List(Of Boolean))()
                        Case 22
                            result.m_Field21 = reader.ReadGeneric(Of KeyValuePair(Of Boolean, Boolean))()
                        Case 23
                            result.m_Field22 = reader.ReadGeneric(Of VInt?)()
                        Case 24
                            result.m_Field23 = reader.ReadGeneric(Of Type)()
                        Case 25
                            result.m_Field24 = reader.ReadGeneric(Of Guid)()
                        Case 26
                            result.m_Field25 = reader.ReadGeneric(Of TimeSpan)()
                        Case 27
                            result.m_Field26 = reader.ReadGeneric(Of DateTime)()
                        Case 28
                            result.m_Field27 = reader.ReadGeneric(Of DateTimeOffset)()
                        Case 29
                            result.m_Field28 = CType(reader.ReadInt32(), TestEnum)
                        Case Else
                            reader.SkipNext()
					End Select
				Loop

                result.OnAfterDeserialization
                Return result
            End Function
        End Class
    End Structure
End Namespace
